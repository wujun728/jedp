<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
 	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 
	如果你在spring的配置文件中使用SchedulerFactoryBean配置了datasoucrce，
	即使用spring托管的datasource，则spring会强制使用这个LocalDataSourceJobStore.
	schedulerFactoryBean配置说明：
	1.dataSource属性不配置时，默认使用本机的内存来存放job运行时信息；(测试环境使用或者每个应用中的调度是独立的)
	  dataSource属性配置时，JOB运行时信息会存放到QRTZ_开头的表中(正式环境需要使用quartz集群时使用)。
	 
	2.Job运行时信息的重要性：记录JOB下一次触发的时间点，当前运行状态等信息；
	  quartz通过读取Job运行时信息来判断一个JOB下一个执行时间点。
	
	3.应用配置的JOB都存放在TBL_QRTZ_JOB_INFO表中；
	当多个WEB应用使用同一个数据库时，可以用DOMAIN_ID来区分不同应用的JOB，
	在application.properties中配置quartz.jobs.domainId；
	  -->
	<bean id="schedulerFactoryBean"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- <property name="dataSource" ref="dataSource" /> -->
		<property name="taskExecutor" ref="taskExecutor" />
		<property name="configLocation" value="classpath:application.properties" />
	</bean>

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	</bean>
	
	<bean id="msgSender" class="org.myframework.quartz.scheduler.job.MsgSenderImpl">
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>

</beans>