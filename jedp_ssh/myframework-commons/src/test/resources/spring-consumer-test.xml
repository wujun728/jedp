<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"

	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	   http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:hostName="172.16.52.2" p:port="6379" p:usePool="true" p:database="3">
	</bean>

	<!-- redis template definition -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connectionFactory-ref="jedisConnectionFactory">
		<!-- 序列化方式 建议key/hashKey采用StringRedisSerializer。 -->
		<property name="defaultSerializer" ref="stringRedisSerializer" />
	</bean>
	<bean id="redisDAO" class="org.myframework.commons.jredis.RedisDAOImpl">
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>

	<bean id="stringRedisSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer" />

	<bean id="messageDelegateListener"
		class="org.myframework.commons.jredis.MessageDelegateListenerImpl" />

	<bean id="messageListener"
		class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
		<property name="delegate" ref="messageDelegateListener" />
		<property name="serializer" ref="stringRedisSerializer" />
	</bean>

	<bean id="redisContainer"
		class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="messageListeners">
			<!-- map of listeners and their associated topics (channels or/and patterns) -->
			<map>
				<entry key-ref="messageListener">
					<bean class="org.springframework.data.redis.listener.ChannelTopic">
						<constructor-arg value="java" />   <!-- 这里配置消费端需要订阅的频道，可以是多个。该一例子订阅JAVA这个频道 -->
					</bean>
				</entry>
			</map>
		</property>
	</bean>
</beans>